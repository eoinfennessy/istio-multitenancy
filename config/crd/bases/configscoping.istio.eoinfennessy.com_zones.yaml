---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: zones.configscoping.istio.eoinfennessy.com
spec:
  group: configscoping.istio.eoinfennessy.com
  names:
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Zone is the Schema for the zones API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ZoneSpec defines the desired state of Zone
            properties:
              additionalEgress:
                description: |-
                  AdditionalEgress can optionally be defined to allow additional service hosts
                  outside the Zone to be exposed to workloads that are part of the Zone.
                items:
                  description: |-
                    AdditionalEgress defines additional service hosts outside the Zone that will
                    be exposed to Zone workloads matching the WorkloadSelector.
                  properties:
                    hosts:
                      description: |-
                        Hosts is a list of additional service hosts that will be exposed to the
                        specified workloads. Each host follows the <namespace>/<dns_name> format, and
                        the wildcard "*" can be specified for both the namespace and (part of) the DNS
                        name.
                        See https://istio.io/latest/docs/reference/config/networking/sidecar/#IstioEgressListener for more info.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    workloadSelector:
                      additionalProperties:
                        type: string
                      description: |-
                        WorkloadSelector is a map of labels used to select the workloads that will
                        include the additional egress hosts. The targeted workloads must match all
                        labels specified in WorkloadSelector.
                      type: object
                  required:
                  - hosts
                  - workloadSelector
                  type: object
                type: array
              manageAuthorizationPolicies:
                default: true
                description: |-
                  ManageAuthorizationPolicies can be provided to specify whether
                  AuthorizationPolicies should be managed for the Zone. Updating the value to
                  false will cause any AuthorizationPolicies previously created for the Zone to
                  be deleted. The default value is true.
                type: boolean
              namespaces:
                description: Namespaces is a list of namespaces to include in the
                  Zone
                items:
                  type: string
                minItems: 1
                type: array
              serviceExports:
                description: ServiceExports can optionally be defined to export Services
                  to namespaces outside the Zone.
                items:
                  description: ServiceExport defines a list of namespaces outside
                    the Zone to export the specified Service to.
                  properties:
                    name:
                      description: Name is the name of the Service to be exported.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the Service to be
                        exported.
                      type: string
                    toNamespaces:
                      description: |-
                        ToNamespaces is a list of the namespaces the Service will be exported to. Use
                        the wildcard ["*"] to export the service to the entire mesh.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - name
                  - namespace
                  - toNamespaces
                  type: object
                type: array
            required:
            - namespaces
            type: object
          status:
            description: ZoneStatus defines the observed state of Zone
            properties:
              conditions:
                description: Represents the latest available observations of the object's
                  current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
